Sprint 1:
Set up page stcture: Search > Question > Answer > Summary
Set up top navigation to go to all pages
Create data:
Question: Linked answers object, Question text, Level: Easy/Medium/Hard
Get question 1 to show on Question screen


Sprint 2:
Place everything on one page
Get answers linked to question 1 on answer screen
Get answer 1 to show on Answer screen
Show random question
Show answers linked to random question


Sprint 3:
Refine answer content
Create multiple clickable answers list (checkboxes?) https://juristr.com/blog/2016/11/ng2-binding-radiobutton-lists/


Sprint 4
Refresh to show new random question when checkbox ticked
Create answer group model and separate answer model http://stackoverflow.com/questions/40633688/how-to-define-a-nested-object-within-model-angular2-typescript

Show answers linked to answer group 1h
Check if question answered correctly 2h
Make sure random question is not current question 1h
Check this can be moved to website 1h
Move to website 1h (make non-indexable by search engines)

Sprint 5
Fix error on pageload where realitems can't be found (see console on pageload)
Improve look and feel a tiny bit - add Bootstrap? 2h
Tidy up code 1h



Updated LinkedIn and CV - 4h
Update website - 3h


Sprint 6
Create data:
User stats:
Questions answered correctly

Sprint 7:
Show progress bar

Unresolved things:
(-In question.service.ts > getRandomQuestion, promises should be chained as something getQuestions is not resolved when questions.length
is being fetched)
-in question.component.ts, question: Question[] = [] should be question: Question but this doesn't get picked by quizcomponent. currently 
this throws an error on npm start


Don't forget Systemjs.config.js in root is hidden

Deliverables:
Search page
Question page
Answer page
Summary page

walk through:
app.routing.module looks at paths (url) and selects page to show based on this
app component provides global layout (nav etc) template, global title
main bootstraps the app (this is what's loaded in from systemsjs.config in root

to create a new module: include it in both app (add also in declarations here) and routing and export it with the same name in ts
